/* ----------------------------------- */
/*                                     */
/*  This JavaScript Code developed     */
/*  by Oleg Gribanov & ChatGPT :: 2023 */
/*                                     */
/* ----------------------------------- */

let xp = 0; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é xp –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 0
let health = 100; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é health –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 100
let gold = 50; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é gold –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 50
let currentWeapon = 0; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é currentWeapon –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 0
let fighting; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é fighting, –Ω–æ –Ω–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ
let monsterHealth; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é monsterHealth, –Ω–æ –Ω–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ
let inventory = ["stick"]; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é inventory –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π –º–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º "stick"

const button1 = document.querySelector("#button1"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É button1 –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ —Å id = "button1"
const button2 = document.querySelector("#button2"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É button2 –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ —Å id = "button2"
const button3 = document.querySelector("#button3"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É button3 –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ —Å id = "button3"
const text = document.querySelector("#text"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É text –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "text"
const xpText = document.querySelector("#xpText"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É xpText –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "xpText"
const healthText = document.querySelector("#healthText"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É healthText –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "healthText"
const goldText = document.querySelector("#goldText"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É goldText –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "goldText"
const monsterStats = document.querySelector("#monsterStats"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É monsterStats –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "monsterStats"
const monsterNameText = document.querySelector("#monsterName"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É monsterNameText –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "monsterName"
const monsterHealthText = document.querySelector("#monsterHealth"); // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É monsterHealthText –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–π —ç–ª–µ–º–µ–Ω—Ç —Å id = "monsterHealth"

const weapons = [
  // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Å—Å–∏–≤ weapons
  {
    name: "stick", // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ name –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –º–∞—Å—Å–∏–≤–∞ weapons –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ "stick"
    power: 5, // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ power –ø–µ—Ä–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –º–∞—Å—Å–∏–≤–∞ weapons –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ 5
  },
  {
    name: "dagger", // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ name –≤—Ç–æ—Ä–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –º–∞—Å—Å–∏–≤–∞ weapons –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ "dagger"
    power: 30, // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ power –≤—Ç–æ—Ä–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –º–∞—Å—Å–∏–≤–∞ weapons –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ 30
  },
  {
    name: "claw hammer", // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ name —Ç—Ä–µ—Ç—å–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    power: 50,
  },
  {
    name: "sword",
    power: 100,
  },
];

// Define the different monsters that the player can encounter, each with a name, level, and health.
const monsters = [
  {
    name: "slime",
    level: 2,
    health: 15,
  },
  {
    name: "fanged beast",
    level: 8,
    health: 60,
  },
  {
    name: "dragon",
    level: 20,
    health: 300,
  },
];

// Define the different locations in the game, each with a name, text to display, and buttons with text and functions.
const locations = [
  {
    name: "town square",
    "button text": ["Go to store", "Go to cave", "Fight Zomby"],
    "button functions": [goStore, goCave, fightDragon],
    text: 'You are in the town square. You see a sign that says "Store."',
  },
  {
    name: "store",
    "button text": [
      "Buy 10 health (10 gold)",
      "Buy weapon (30 gold)",
      "Go to town square",
    ],
    "button functions": [buyHealth, buyWeapon, goTown],
    text: "You enter the store.",
  },
  {
    name: "cave",
    "button text": ["Fight slime", "Fight fanged beast", "Go to town square"],
    "button functions": [fightSlime, fightBeast, goTown],
    text: "You enter the cave. You see some monsters.",
  },
  {
    name: "fight",
    "button text": ["Attack", "Dodge", "Run"],
    "button functions": [attack, dodge, goTown],
    text: "You are fighting a monster.",
  },
  {
    name: "kill monster",
    "button text": [
      "Go to town square",
      "Go to town square",
      "Go to town square",
    ],
    "button functions": [goTown, goTown, easterEgg],
    text: 'The monster screams "Arg!" as it dies. You gain experience points and find gold.',
  },
  {
    name: "lose",
    "button text": ["REPLAY?", "REPLAY?", "REPLAY?"],
    "button functions": [restart, restart, restart],
    text: "You die. ‚ò†Ô∏è",
  },
  {
    name: "win",
    "button text": ["REPLAY?", "REPLAY?", "REPLAY?"],
    "button functions": [restart, restart, restart],
    text: "You defeat the Zomby! YOU WIN THE GAME! üéâ",
  },
  {
    name: "easter egg",
    "button text": ["2", "8", "Go to town square?"],
    "button functions": [pickTwo, pickEight, goTown],
    text: "You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!",
  },
];

// initialize buttons
button1.onclick = goStore;
button2.onclick = goCave;
button3.onclick = fightDragon;

function update(location) {
  monsterStats.style.display = "none"; // –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–æ–Ω—Å—Ç—Ä–µ
  button1.innerText = location["button text"][0]; // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–µ –Ω–∞ —Ç–µ–∫—Å—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –æ–±—ä–µ–∫—Ç–µ location
  button2.innerText = location["button text"][1]; // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–µ –Ω–∞ —Ç–µ–∫—Å—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –æ–±—ä–µ–∫—Ç–µ location
  button3.innerText = location["button text"][2]; // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ —Ç—Ä–µ—Ç—å–µ–π –∫–Ω–æ–ø–∫–µ –Ω–∞ —Ç–µ–∫—Å—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –æ–±—ä–µ–∫—Ç–µ location
  button1.onclick = location["button functions"][0]; // –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–∞—Å—Å–∏–≤–∞ button functions –æ–±—ä–µ–∫—Ç–∞ location –Ω–∞ –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É
  button2.onclick = location["button functions"][1]; // –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–∞—Å—Å–∏–≤–∞ button functions –æ–±—ä–µ–∫—Ç–∞ location –Ω–∞ –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É
  button3.onclick = location["button functions"][2]; // –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–∞—Å—Å–∏–≤–∞ button functions –æ–±—ä–µ–∫—Ç–∞ location –Ω–∞ —Ç—Ä–µ—Ç—å—é –∫–Ω–æ–ø–∫—É
  text.innerText = location.text; // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –±–ª–æ–∫–µ text –Ω–∞ —Ç–µ–∫—Å—Ç, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –æ–±—ä–µ–∫—Ç–µ location
}

function goTown() {
  update(locations[0]); // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≥–æ—Ä–æ–¥
}

function goStore() {
  update(locations[1]); // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –º–∞–≥–∞–∑–∏–Ω
}

function goCave() {
  update(locations[2]); // –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–µ—â–µ—Ä—É
}

function buyHealth() {
  if (gold >= 10) {
    // –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
    gold -= 10; // –£–±–∞–≤–∏—Ç—å –∑–æ–ª–æ—Ç–æ
    health += 10; // –£–≤–µ–ª–∏—á–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ
    goldText.innerText = gold; // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –±–ª–æ–∫–µ goldText
    healthText.innerText = health; // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –±–ª–æ–∫–µ healthText
  } else {
    // –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
    text.innerText = "You do not have enough gold to buy health."; // –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–ª–æ–∫ text
  }
}

// –§—É–Ω–∫—Ü–∏—è buyWeapon –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–∫—É–ø–∫—É –æ—Ä—É–∂–∏—è. –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ –∏ –æ–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å. –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
function buyWeapon() {
  if (currentWeapon < weapons.length - 1) {
    // –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å–∞–º–æ–µ –º–æ—â–Ω–æ–µ –æ—Ä—É–∂–∏–µ
    if (gold >= 30) {
      // –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –æ—Ä—É–∂–∏—è
      gold -= 30; // –£–±–∞–≤–∏—Ç—å –∑–æ–ª–æ—Ç–æ
      currentWeapon++; // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –æ—Ä—É–∂–∏–µ
      goldText.innerText = gold; // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –±–ª–æ–∫–µ goldText
      let newWeapon = weapons[currentWeapon].name; // –ó–∞–ø–æ–º–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ä—É–∂–∏—è

      text.innerText = "You now have a " + newWeapon + ".";
      inventory.push(newWeapon);
      text.innerText += " In your inventory you have: " + inventory;
    } else {
      text.innerText = "You do not have enough gold to buy a weapon.";
    }
  } else {
    text.innerText = "You already have the most powerful weapon!";
    button2.innerText = "Sell weapon for 15 gold";
    button2.onclick = sellWeapon;
  }
}

// –§—É–Ω–∫—Ü–∏—è sellWeapon –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—Ä–æ–¥–∞–∂—É –æ—Ä—É–∂–∏—è. –ï—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –µ—Å—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, —Ç–æ –æ–Ω –ø—Ä–æ–¥–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –æ—Ä—É–∂–∏–µ –∏ –ø–æ–ª—É—á–∞–µ—Ç 15 –∑–æ–ª–æ—Ç–∞. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.

function sellWeapon() {
  if (inventory.length > 1) {
    gold += 15;
    goldText.innerText = gold;
    let currentWeapon = inventory.shift();
    text.innerText = "You sold a " + currentWeapon + ".";
    text.innerText += " In your inventory you have: " + inventory;
  } else {
    text.innerText = "Don't sell your only weapon!";
  }
}

// –§—É–Ω–∫—Ü–∏–∏ fightSlime, fightBeast –∏ fightDragon –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–Ω—Å—Ç—Ä–∞, –ø—Ä–æ—Ç–∏–≤ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç —Å—Ä–∞–∂–∞—Ç—å—Å—è –∏–≥—Ä–æ–∫.

function fightSlime() {
  fighting = 0;
  goFight();
}

function fightBeast() {
  fighting = 1;
  goFight();
}

function fightDragon() {
  fighting = 2;
  goFight();
}

// –§—É–Ω–∫—Ü–∏—è goFight –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–æ–Ω—Å—Ç—Ä–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–Ω—Å—Ç—Ä–∞, –∞ —Ç–∞–∫–∂–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç—Ç–æ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.

function goFight() {
  update(locations[3]);
  monsterHealth = monsters[fighting].health;
  monsterStats.style.display = "block";
  monsterNameText.innerText = monsters[fighting].name;
  monsterHealthText.innerText = monsterHealth;
}

// –§—É–Ω–∫—Ü–∏—è attack –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞—Ç–∞–∫—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞. –ï—Å–ª–∏ –∞—Ç–∞–∫–∞ —É—Å–ø–µ—à–Ω–∞, —Ç–æ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∞—Ç–∞–∫–∏ –º–æ–Ω—Å—Ç—Ä–∞. –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞—Ç–∞–∫–∞ –Ω–∞ –º–æ–Ω—Å—Ç—Ä–∞, –∏ –µ–≥–æ –∑–¥–æ—Ä–æ–≤—å–µ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã –æ—Ä—É–∂–∏—è –∏–≥—Ä–æ–∫–∞ –∏ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É 1 –∏ —É—Ä–æ–≤–Ω–µ–º –∏–≥—Ä–æ–∫–∞. –ï—Å–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –º–æ–Ω—Å—Ç—Ä–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 0, —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ª–∏–±–æ –∏–≥—Ä–æ–∫ –ø–æ–±–µ–∂–¥–∞–µ—Ç –º–æ–Ω—Å—Ç—Ä–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π –ª–æ–∫–∞—Ü–∏–∏.

function attack() {
  text.innerText = "The " + monsters[fighting].name + " attacks.";
  text.innerText +=
    " You attack it with your " + weapons[currentWeapon].name + ".";

  if (isMonsterHit()) {
    health -= getMonsterAttackValue(monsters[fighting].level);
  } else {
    text.innerText += " You miss.";
  }

  monsterHealth -=
    weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;
  healthText.innerText = health;
  monsterHealthText.innerText = monsterHealth;
  if (health <= 0) {
    lose();
  } else if (monsterHealth <= 0) {
    fighting === 2 ? winGame() : defeatMonster();
  }

  if (Math.random() <= 0.1 && inventory.length !== 1) {
    text.innerText += " Your " + inventory.pop() + " breaks.";
    currentWeapon--;
  }
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ getMonsterAttackValue, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç level –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–∞–∫–∏ –º–æ–Ω—Å—Ç—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ–≥–æ —É—Ä–æ–≤–Ω—è
function getMonsterAttackValue(level) {
  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —É–¥–∞—Ä–∞ –º–æ–Ω—Å—Ç—Ä–∞, –∏—Å—Ö–æ–¥—è –∏–∑ —É—Ä–æ–≤–Ω—è –∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞
  let hit = level * 5 - Math.floor(Math.random() * xp);
  // –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏—è —É–¥–∞—Ä–∞
  console.log(hit);
  // –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è —É–¥–∞—Ä–∞
  return hit;
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ isMonsterHit, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–ø–∞–¥–µ—Ç –ª–∏ –º–æ–Ω—Å—Ç—Ä –ø–æ –∏–≥—Ä–æ–∫—É
function isMonsterHit() {
  // –ú–æ–Ω—Å—Ç—Ä –ø–æ–ø–∞–¥–µ—Ç –ø–æ –∏–≥—Ä–æ–∫—É —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 80% (–µ—Å–ª–∏ Math.random() > 0.2) –∏–ª–∏ –µ—Å–ª–∏ —É –∏–≥—Ä–æ–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 20 –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è
  return Math.random() > 0.2 || health < 20;
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ dodge, –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏–≥—Ä—ã, —Å–æ–æ–±—â–∞—è, —á—Ç–æ –∏–≥—Ä–æ–∫ —É–≤–µ—Ä–Ω—É–ª—Å—è –æ—Ç –∞—Ç–∞–∫–∏ –º–æ–Ω—Å—Ç—Ä–∞
function dodge() {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Å id "text"
  text.innerText =
    "You dodge the attack from the " + monsters[fighting].name + ".";
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ defeatMonster, –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–æ–ª–æ—Ç–∞ –∏ –æ–ø—ã—Ç–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ—Å–ª–µ —É–±–∏–π—Å—Ç–≤–∞ –º–æ–Ω—Å—Ç—Ä–∞, –∞ —Ç–∞–∫–∂–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é update –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞
function defeatMonster() {
  // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, –∑–∞–≤–∏—Å—è—â–µ–µ –æ—Ç —É—Ä–æ–≤–Ω—è —É–±–∏—Ç–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞
  gold += Math.floor(monsters[fighting].level * 6.7);
  // –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–ø—ã—Ç–∞ –∏–≥—Ä–æ–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å —É–±–∏—Ç–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞
  xp += monsters[fighting].level;
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Å id "goldText" —Å –Ω–æ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–æ–ª–æ—Ç–∞
  goldText.innerText = gold;
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Å id "xpText" —Å –Ω–æ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ–ø—ã—Ç–∞
  xpText.innerText = xp;
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞, –≤—ã–∑—ã–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—é update —Å –Ω–æ–≤—ã–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º
  update(locations[4]);
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ lose, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é update —Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø—Ä–æ–∏–≥—Ä—ã—à—É
function lose() {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞, –≤—ã–∑—ã–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—é update —Å –Ω–æ–≤—ã–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º
  update(locations[5]);
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ winGame, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é update —Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø–æ–±–µ–¥–µ –≤ –∏–≥—Ä–µ
function winGame() {
  update(locations[6]);
}

function restart() {
  xp = 0; // Reset experience points to 0
  health = 100; // Reset health to 100
  gold = 50; // Reset gold to 50
  currentWeapon = 0; // Reset current weapon to 0
  inventory = ["stick"]; // Reset inventory to contain only a stick
  goldText.innerText = gold; // Update the gold text element to display the current value of gold
  healthText.innerText = health; // Update the health text element to display the current value of health
  xpText.innerText = xp; // Update the experience points text element to display the current value of xp
  goTown(); // Call the goTown() function to navigate to the town location
}

function easterEgg() {
  update(locations[7]); // Call the update() function with the location at index 7 to display an Easter egg
}

function pickTwo() {
  pick(2); // Call the pick() function with the argument 2 to play the "Pick Two" game
}

function pickEight() {
  pick(8); // Call the pick() function with the argument 8 to play the "Pick Eight" game
}

function pick(guess) {
  let numbers = []; // Initialize an empty array to hold the random numbers
  while (numbers.length < 10) {
    // Generate 10 random numbers between 0 and 10
    numbers.push(Math.floor(Math.random() * 11));
  }

  text.innerText = "You picked " + guess + ". Here are the random numbers:\n"; // Update the text element to display the user's guess and the random numbers

  for (let i = 0; i < 10; i++) {
    // Loop through the random numbers and add them to the text element
    text.innerText += numbers[i] + "\n";
  }

  if (numbers.indexOf(guess) !== -1) {
    // If the user's guess is in the array of random numbers
    text.innerText += "Right! You win 20 gold!"; // Update the text element to indicate the user won and award 20 gold
    gold += 20;
    goldText.innerText = gold; // Update the gold text element to display the new value of gold
  } else {
    // If the user's guess is not in the array of random numbers
    text.innerText += "Wrong! You lose 10 health!"; // Update the text element to indicate the user lost and subtract 10 from health
    health -= 10;
    healthText.innerText = health; // Update the health text element to display the new value of health
    if (health <= 0) {
      // If health is less than or equal to 0, the user has lost the game
      lose(); // Call the lose() function to end the game
    }
  }
}
